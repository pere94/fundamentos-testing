name: API CI
on:
  push:
    paths:
      - "api/**"
      - ".github/workflows/api-ci.yml"

defaults:
  run:
    working-directory: ./api

jobs:
    # Lint the code ----------------------------------------------------------------
    linter:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v2

        - name: Setup Nodejs
          uses: actions/setup-node@v2
          with:
            node-version: 18.x
            cache: 'npm'
            cache-dependency-path: ./api/package-lock.json

        - name: install
          shell: bash
          run: npm ci

        - name: run linter
          shell: bash
          run: npm run lint

    # Run unit tests ----------------------------------------------------------------
    unit-tests:
      runs-on: ubuntu-latest

      steps:
        - name: Checkout code
          uses: actions/checkout@v2

        - name: Use Node.js 18.x
          uses: actions/setup-node@v2
          with:
            node-version: 18.x
            cache: 'npm'
            cache-dependency-path: ./api/package-lock.json

        - name: Install dependencies
          shell: bash
          run: npm ci

        - name: Run unit tests
          shell: bash
          run: npm run test:unit

    # Run integration tests ----------------------------------------------------------------
    integration-tests:
      runs-on: ubuntu-latest

      steps:
        - name: Checkout code
          uses: actions/checkout@v2

        - name: Use Node.js 18.x
          uses: actions/setup-node@v2
          with:
            node-version: 18.x
            cache: 'npm'
            cache-dependency-path: ./api/package-lock.json

        - name: Install dependencies
          shell: bash
          run: npm ci

        - name: Run unit tests
          shell: bash
          run: npm run test:integration

    # Run e2e tests ----------------------------------------------------------------
    e2e:
      runs-on: ubuntu-latest
      container:
        image: node:18

      services:
        mongo-e2e:
          image: mongo:latest
          ports:
            - 27017:27017
          env:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: 123456

      steps:
        - name: Checkout
          uses: actions/checkout@v2

        - name: install
          shell: bash
          run: npm ci

        - name: run e2e
          shell: bash
          env:
            NODE_ENV: test
            MONGODB_DBNAME_TEST: dbtest
            MONGODB_URL_TEST: mongodb://root:123456@mongo-e2e:27017?retryWrites=true&writeConcern=majority
          run: npm run test:e2e

